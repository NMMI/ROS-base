<launch>
  <arg name="device_name" doc="The unique device name used in the yaml controller configurations."/>
  <arg name="device_type" doc="The type of the device [qbhand, qbmove, ...]."/>

  <!-- load controller configurations -->
  <!-- FIXME: cannot parse directly from yaml with substitution args in kinetic 28-03-2018 (wait for merge ros_comm#1354: https://github.com/ros/ros_comm/pull/1354) -->
  <!--<rosparam file="$(eval find(package_prefix + '_control') + '/config/' + device_type + '_controllers.yaml')" command="load" subst_value="true"/>-->  <!-- FIXME: package_prefix from device_type -->
  <group if="$(eval device_type == 'qbhand')">
    <arg name="device_controllers" value="$(arg device_name)_joint_state_controller
                                          $(arg device_name)_synergy_trajectory_controller"/>
    <rosparam subst_value="true">  <!--FIXME: hardcoded-->
      $(arg device_name)_joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 100

      $(arg device_name)_synergy_trajectory_controller:
        type: position_controllers/JointTrajectoryController
        joints:
          - $(arg device_name)_synergy_joint
        constraints:  # fake values due to the adaptability
          goal_time: 10.0
          stopped_velocity_tolerance: 10.0
          $(arg device_name)_synergy_joint:
            trajectory: 10.0
            goal: 10.0
        state_publish_rate: 100
        action_monitor_rate: 120
        stop_trajectory_duration: 0
    </rosparam>

    <!-- spawn the controllers in current namespace -->
    <include file="$(find qb_device_control)/launch/spawner_template.launch">
      <arg name="device_controllers" value="$(arg device_controllers)"/>
    </include>
  </group>
  <group if="$(eval device_type == 'qbmove')">
    <arg name="device_controllers" value="$(arg device_name)_joint_state_controller
                                          $(arg device_name)_position_and_preset_trajectory_controller"/>
                                          <!--$(arg device_name)_motor_positions_trajectory_controller-->
    <rosparam subst_value="true">  <!--FIXME: hardcoded-->
      $(arg device_name)_joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 100

      $(arg device_name)_position_and_preset_trajectory_controller:
        type: position_controllers/JointTrajectoryController
        joints:
          - $(arg device_name)_shaft_joint
          - $(arg device_name)_stiffness_preset_virtual_joint
        constraints:  # fake values due to the adaptability
          goal_time: 10.0
          stopped_velocity_tolerance: 10.0
          $(arg device_name)_shaft_joint:
            trajectory: 10.0
            goal: 10.0
          $(arg device_name)_stiffness_preset_virtual_joint:
            trajectory: 10.0
            goal: 10.0
        state_publish_rate: 100
        action_monitor_rate: 120
        stop_trajectory_duration: 0

      <!--FIXME: need an extended checkForConflict method to make these two controllers mutually exclusive -->
      <!--$(arg device_name)_motor_positions_trajectory_controller:-->
        <!--type: position_controllers/JointTrajectoryController-->
        <!--joints:-->
          <!-- - $(arg device_name)_motor_1_joint-->
          <!-- - $(arg device_name)_motor_2_joint-->
        <!--constraints:  # fake values due to the adaptability-->
          <!--goal_time: 10.0-->
          <!--stopped_velocity_tolerance: 10.0-->
          <!--$(arg device_name)_motor_1_joint:-->
            <!--trajectory: 10.0-->
            <!--goal: 10.0-->
          <!--$(arg device_name)_motor_2_joint:-->
            <!--trajectory: 10.0-->
            <!--goal: 10.0-->
        <!--state_publish_rate: 100-->
        <!--action_monitor_rate: 120-->
        <!--stop_trajectory_duration: 0-->
    </rosparam>

    <!-- spawn the controllers in current namespace -->
    <include file="$(find qb_device_control)/launch/spawner_template.launch">
      <arg name="device_controllers" value="$(arg device_controllers)"/>
    </include>
  </group>
</launch>